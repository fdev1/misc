#!/bin/sh

source_dir=/usr/share/initramfs
output_dir=$source_dir/ramfs
last_error=0
copy_firmware=0

error_check()
{
	if [ $last_error == 1 ]; then
		echo 'An error has occurred!'
		exit
	fi
}

while [ $# != 0 ];
do

	case $1 in

		--copy-firmware)
			copy_firmware=1
		;;
	esac
done


#
# clean output directories
#
if [ -d $output_dir ]; then
	echo 'Cleaning up...'
	rm -r $output_dir || last_error=1
	error_check
fi

#
# make directories
#
echo 'Creating directory tree...'
mkdir -p $output_dir/bin || last_error=1
mkdir -p $output_dir/sbin || last_error=1
mkdir -p $output_dir/etc || last_error=1
mkdir -p $output_dir/usr/bin || last_error=1
mkdir -p $output_dir/usr/sbin || last_error=1
mkdir -p $output_dir/usr/lib64 || last_error=1
mkdir -p $output_dir/lib64 || last_error=1
mkdir -p $output_dir/dev || last_error=1
mkdir -p $output_dir/dev/shm || last_error=1
mkdir -p $output_dir/proc || last_error=1
mkdir -p $output_dir/sys || last_error=1
mkdir -p $output_dir/run || last_error=1
mkdir -p $output_dir/tmp || last_error=1
mkdir -p $output_dir/var || last_error=1
mkdir -p $output_dir/newroot || last_error=1
mkdir -p $output_dir/newroot/run
mkdir -p $output_dir/newroot/dev
mkdir -p $output_dir/newroot/sys
mkdir -p $output_dir/newroot/proc
ln -s lib64 $output_dir/lib || last_error=1
ln -s lib64 $output_dir/usr/lib || last_error=1

cd $output_dir/dev || last_error=1
mknod -m 660 $output_dir/dev/console c 5 1 || last_error=1
mknod -m 660 $output_dir/dev/null c 1 3 || last_error=1
mknod -m 660 $output_dir/dev/zero c 1 5 || last_error=1
mknod -m 600 $output_dir/dev/tty0 c 4 0 || last_error=1
mknod -m 600 $output_dir/dev/tty1 c 4 1 || last_error=1
mknod -m 600 $output_dir/dev/ttyS0 c 4 64 || last_error=1
chmod 1777 $output_dir/dev/shm || last_error=1
error_check

#
# creating fstab
#
echo 'Creating fstab...'
echo "/dev/ram0     /           ext2    defaults    0 0" >  $output_dir/etc/fstab
echo "proc          /proc       proc    defaults    0 0" >> $output_dir/etc/fstab

#
# copy busybox files
#
echo 'Copying and installing busybox...'
cp /bin/busybox $output_dir/bin || last_error=1
ln -s busybox $output_dir/bin/cat || last_error=1
ln -s busybox $output_dir/bin/mount || last_error=1
ln -s busybox $output_dir/bin/sh || last_error=1
ln -s busybox $output_dir/bin/echo || last_error=1
ln -s /bin/busybox $output_dir/sbin/switch_root || last_error=1
error_check

#
# copy plymouth files
#
echo 'Copying plymouth files...'
mkdir -p $output_dir/etc/plymouth || last_error=1
mkdir -p $output_dir/usr/share/plymouth/themes || last_error=1
mkdir -p $output_dir/usr/lib/plymouth/renderers || last_error=1
cp /bin/plymouth $output_dir/bin/plymouth || last_error=1
cp /sbin/plymouthd $output_dir/sbin/plymouthd || last_error=1
cp -r /etc/plymouth/* $output_dir/etc/plymouth || last_error=1
#cp -r /usr/share/plymouth/* $output_dir/usr/share/plymouth || last_error=1

cp /usr/lib/libply.so.2 $output_dir/usr/lib
cp /usr/lib/libply-splash-core.so.2 $output_dir/usr/lib
cp /usr/lib/libply-splash-graphics.so.2 $output_dir/usr/lib

cp /usr/lib/libpng16.so.16 $output_dir/usr/lib
cp /usr/lib/libkms.so.1 $output_dir/usr/lib
cp /usr/lib/libdrm.so.2 $output_dir/usr/lib

cp /lib/libc.so.6 $output_dir/lib64
cp /lib/librt.so.1 $output_dir/lib64
cp /lib/libdl.so.2 $output_dir/lib64
cp /lib/libm.so.6 $output_dir/lib64
cp /lib/ld-linux-x86-64.so.2 $output_dir/lib64
cp /lib/libpthread.so.0 $output_dir/lib64
cp /lib/libkmod.so.2 $output_dir/lib
cp /lib/libz.so.1 $output_dir/lib

cp /lib/libacl.so.1 $output_dir/lib
cp /lib/libuuid.so.1 $output_dir/lib
cp /lib/libblkid.so.1 $output_dir/lib
cp /lib/libattr.so.1 $output_dir/lib

cp /usr/lib/plymouth/text.so $output_dir/usr/lib/plymouth
cp /usr/lib/plymouth/details.so $output_dir/usr/lib/plymouth
cp /usr/lib/plymouth/renderers/frame-buffer.so $output_dir/usr/lib/plymouth/renderers
cp /usr/lib/plymouth/renderers/drm.so $output_dir/usr/lib/plymouth/renderers
cp /usr/lib/plymouth/renderers/x11.so $output_dir/usr/lib/plymouth/renderers

cp /usr/share/plymouth/bizcom.png $output_dir/usr/share/plymouth
cp /usr/share/plymouth/plymouthd.defaults $output_dir/usr/share/plymouth
cp -r /usr/share/plymouth/themes/text $output_dir/usr/share/plymouth/themes
cp -r /usr/share/plymouth/themes/details $output_dir/usr/share/plymouth/themes
error_check

#
# Copy plymouth theme
#
ply_theme=$(plymouth-set-default-theme)
ply_theme_file=/usr/share/plymouth/themes/$ply_theme/$ply_theme.plymouth
ply_plugins=$(plymouth --get-splash-plugin-path)

[ -z "$ply_theme" ] && plymouth_theme=text
echo 'Copying plymouth theme: '$ply_theme
cp -r /usr/share/plymouth/themes/$ply_theme $output_dir/usr/share/plymouth/themes
cp -r $ply_plugins$(grep "^ModuleName=" $ply_theme_file | cut -d= -f2-).so $output_dir$ply_plugins
ln -s $ply_theme/$ply_theme.plymouth $output_dir/usr/share/plymouth/themes/default.plymouth

error_check

#
# copy usb firmware
#
if [ $copy_firmware == 1 ]; then
	echo 'Copying USB firmware...'
	mkdir -p $output_dir/lib64/firmware || last_error=1
	cp -r /lib/firmware/ar3k $output_dir/lib/firmware/ || last_error=1
	error_check

	#echo 'Copying modules...'
	mkdir -p $output_dir/lib/modules/3.16.1/kernel/drivers/char/drm/
	mkdir -p $output_dir/lib/modules/3.16.1/kernel/drivers/gpu/drm/
	cp /lib/modules/3.16.1/kernel/drivers/char/drm/fglrx.ko $output_dir/lib/modules/3.16.1/kernel/drivers/char/drm
	#cp /lib/modules/3.16.1/kernel/drivers/gpu/drm/drm_kms_helper.ko $output_dir/lib/modules/3.16.1/kernel/drivers/gpu/drm
	#cp -r /lib/modules/3.16.1/kernel/drivers/gpu/drm/ttm $output_dir/lib/modules/3.16.1/kernel/drivers/gpu/drm
	error_check
fi

#
# copy resume
#
echo 'Copying uswsusp resume...'
cp /usr/lib/suspend/resume $output_dir/sbin
cp /etc/suspend.conf $output_dir/etc
error_check

#
# ld.so.conf
#
echo 'Generating ld.so.cache...'
echo '/lib' >  $output_dir/etc/ld.so.conf
echo '/usr/lib' >> $output_dir/etc/ld.so.conf
ldconfig -r $output_dir

#
# copy init script
#
echo 'Copying linuxrc...'
#cp $source_dir/linuxrc $output_dir/init || last_error=1
#error_check


#########################################
# begin init script
#########################################
cat > $output_dir/init << "EOF"
#!/bin/sh
#
# initramfs init script
#

# error checking routine
#
error_check()
{
	if [ $last_error == 1 ]; then
		echo 'An error has occurred.'
		if [ $debug == 1 ]; then
			sh
		fi
		last_error=0
	fi
}

# clean input/output
#
exec >/dev/console </dev/console 2>&1

# make sure that /sbin and /usr/sbin are in PATH
# dmraid for instance is in /usr/sbin
#
PATH="${PATH}:/sbin:/usr/sbin"

fake_root=""
quiet=0
debug=0
show_splash=0
last_error=0
init_opts=""

# mount virtual filesystems
#
mount -t proc -o noexec,nosuid,nodev proc /proc >/dev/null 2>&1
mount -o remount,rw / >/dev/null 2>&1
mount -t tmpfs -o rw,nosuid,nodev,relatime,mode=755 none /run 2>&1

# mount devfs
#
mount -t devtmpfs -o "exec,nosuid,mode=0755,size=10M" udev /dev || last_error=1
mkdir -m 0755 /dev/pts
mount -t devpts -o gid=5,mode=0620 devpts /dev/pts || last_error=1
mkdir -p -m 1777 /dev/shm
mount -t tmpfs -o mode=1777,nosuid,nodev,strictatime tmpfs /dev/shm || last_error=1
error_check

# mount sysfs
#
mount -t sysfs sysfs /sys -o noexec,nosuid,nodev > /dev/null 2>&1 || last_error=1
error_check

# invoke uswsusp resume
#
/sbin/resume

# parse command line
#
for x in $(cat /proc/cmdline); do
	case "${x}" in
        	root=*)
			fake_root=${x#*=}
        	;;
		init_opts=*)
			init_opts=${x#*=}
		;;
		debug)
			debug=1
		;;
		quiet)
			quiet=1
		;;
		splash)
			show_splash=1
		;;
	esac
done

# start plymouthd and show splash screen
#
if [ $show_splash == 1 ] && [ $quiet == 1 ]; then
	mkdir -p /run/plymouth
	plymouthd --attach-to-session --pid-file /run/plymouth/pid --mode=boot
	plymouth --show-splash
fi

# mount the new root filesystem
#
mount $fake_root /newroot

# inform plymouth of new root
#
if [ $show_splash == 1 ] && [ $quiet == 1 ]; then
	plymouth --newroot=/newroot
fi

# move virtual filesystems to new root
#
mount --move /run /newroot/run
mount --move /dev /newroot/dev
mount --move /sys /newroot/sys
mount --move /proc /newroot/proc

# switch to new root
#
exec /sbin/switch_root -c /dev/console /newroot /sbin/init "$init_opts"

# If we get here, something bad has happened
#
if [ $show_splash == 1 ] && [ $quiet == 1 ]; then
	plymouth --hide-splash
fi

if [ $debug == 1 ]; then
	echo 'Init process did not start correctly'
	echo 'Attempting to start a shell...'
	/bin/sh
else
	echo 'Init process did not start correctly'
fi

echo 'Press CTRL-ALT-DEL to reboot.'

while [ 1 ];
do
	read line
done

EOF
#########################################
# end init script
#########################################
chmod +x $output_dir/init || last_error=1
error_check

#
# create cpio archive
#
echo 'Creating cpio archive...'
cd $output_dir
find . -print0 | cpio --null -o --format=newc > $source_dir/initramfs.cpio || last_error=1
error_check

echo 'Compresing archive...'
cat $source_dir/initramfs.cpio | gzip -9 > $source_dir/initramfs.img || last_error=1
#cat $source_dir/initramfs.cpio | xz > $source_dir/initramfs.img || last_error=1
error_check


